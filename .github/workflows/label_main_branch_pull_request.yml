name: Label Dev Merged Branches on Main PRs

on:
  push:
    branches:
      - dev

jobs:
  label-dev-merged-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Label Dev Merged Branches on Main PRs
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            async function findMergedBranch(commitSha) {
              const { owner, repo } = context.repo;
              let commit;
              try {
                commit = await github.rest.repos.getCommit({
                  owner,
                  repo,
                  ref: commitSha
                });
              } catch (error) {
                console.error(`Cannot find commit with SHA: ${commitSha}`);
                return null;
              }

              const mergeCommit = commit.data.parents.length === 2 ? commit.data : null;
              if (!mergeCommit) {
                return null;
              }

              const { data: comparison } = await github.rest.repos.compareCommits({
                owner,
                repo,
                base: mergeCommit.parents[0].sha,
                head: mergeCommit.parents[1].sha
              });

              return comparison.status === 'identical' ? mergeCommit.parents[1].sha : mergeCommit.parents[0].sha;
            }

            async function findMainPrWithMergedBranch(mergedBranch) {
              const { owner, repo } = context.repo;
              const { data: prs } = await github.rest.pulls.list({
                owner,
                repo,
                state: 'open',
                base: 'main'
              });

              return prs.find(pr => pr.head.ref === mergedBranch);
            }

            const { sha } = context.payload.head_commit;
            const mergedBranch = await findMergedBranch(sha);

            if (mergedBranch) {
              const mainPr = await findMainPrWithMergedBranch(mergedBranch);

              if (mainPr) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: mainPr.number,
                  labels: ['dev']
                });
              }
            }
